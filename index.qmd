```{=html}
<style>
  body{text-align: justify}
</style>
```

:::: progress
:::: {.progress-bar style="width: 100%;"}
::::
::::

# Introdu√ß√£o

Material de apoio para a disciplina de **Controle Estat√≠stico de Qualidade** da *Falculdade de Estat√≠stica* (FAEST) da *Universidade Federal do Par√°* (UFPA).

Para esta etapa inicial foram usadas as refer√™ncias:

* @montgomery2013controle
* @mermaidjs

```{r}
#| warning: false
#| message: false
#| label: Configuration R

# Pacotes necess√°rios
library(ggplot2)
library(dplyr)

library(reticulate)
use_python("C:/Users/user/anaconda3/python.exe", required = TRUE)
```

```{python}
#| label: Configuration Python

# Tratamentos de Dados
import numpy as np
import pandas as pd

# Fun√ß√µes Estat√≠sticas
from scipy import stats

# Visualiza√ß√µes Gr√°ficas
import matplotlib.pyplot as plt
import seaborn as sns
```

## Ferramentas B√°sicas do Controle da Qualidade

As sete ferramentas da qualidae s√£o t√©cnicas estat√≠sticas simples para resolver problemas na ind√∫stria.‚úÖ

-   Estratifica√ß√£o
-   Folhas de Verifica√ß√£o
-   Diagrama de Ishikawa
-   Histograma
-   Diagrama de Pareto
-   Gr√°fico de Dispers√£o
-   Gr√°fico de Controle

### Estratifica√ß√£o

√â uma t√©cnica usada para **separar dados em grupos significativos** para facilitar a an√°lise.

-   Permite observar padr√µes escondidos em dados mistos.
-   Ajuda identificar **fontes de varia√ß√£o**.

::::: columns
::: {.column width="50%"}
```{python}
#| label: fig-ExampleStratPy
#| fig-cap: "Exemplo de Simula√ß√£o de Dados Estratificados em Python."
#| fig-cap-location: bottom
#| fig-width: 6
#| fig-height: 4

# Gera√ß√£o de Dados: Exemplo de Dados Estratificados
np.random.seed(11111)
group1_size = 30
group1_x = np.random.normal(loc=10, scale=2.5, size=group1_size)
group1_y = np.random.normal(loc=20, scale=3.5, size=group1_size)

group2_size = 40
group2_x = np.random.normal(loc=20, scale=3.5, size=group2_size)
group2_y = np.random.normal(loc=30, scale=4.5, size=group2_size)

group3_size = 30
group3_x = np.random.normal(loc=30, scale=4.5, size=group3_size)
group3_y = np.random.normal(loc=15, scale=2.5, size=group3_size)

df = pd.DataFrame({
    "x": np.concatenate([group1_x, group2_x, group3_x]),
    "y": np.concatenate([group1_y, group2_y, group3_y]),
    "Grupo": ["Grupo A"] * group1_size + ["Grupo B"] * group2_size + ["Grupo C"] * group3_size
})

# Configura√ß√µes de Figura
fig, ax = plt.subplots(figsize=(6, 4), dpi=600)

# Scatterplot
sns.scatterplot(x="x", y="y", data=df, hue="Grupo", palette="viridis", s=100, ax=ax)

# Configura√ß√µes de eixos e t√≠tulos
ax.set_xlabel("X", fontsize=12)
ax.set_ylabel("y", fontsize=12)

# Configura√ß√µes de legenda
ax.legend(loc="upper right", frameon=False)

# Outras configura√ß√µes
ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

# Exibi√ß√£o do gr√°fico
plt.show()
```
:::

::: {.column width="50%"}
```{r}
#| label: fig-ExampleStratR
#| fig-cap: "Exemplo de Simula√ß√£o de Dados Estratificados em R."
#| fig-cap-location: bottom
#| fig-width: 6
#| fig-height: 4

# Definir semente
set.seed(11111)

# Grupo A
group1_size <- 30
group1_x <- rnorm(group1_size, mean = 10, sd = 2.5)
group1_y <- rnorm(group1_size, mean = 20, sd = 3.5)

# Grupo B
group2_size <- 40
group2_x <- rnorm(group2_size, mean = 20, sd = 3.5)
group2_y <- rnorm(group2_size, mean = 30, sd = 4.5)

# Grupo C
group3_size <- 30
group3_x <- rnorm(group3_size, mean = 30, sd = 4.5)
group3_y <- rnorm(group3_size, mean = 15, sd = 2.5)

# DataFrame unificado
df <- data.frame(
  x = c(group1_x, group2_x, group3_x),
  y = c(group1_y, group2_y, group3_y),
  Grupo = factor(c(
    rep("Grupo A", group1_size),
    rep("Grupo B", group2_size),
    rep("Grupo C", group3_size)
  ))
)

# Gr√°fico com ggplot2
ggplot(df, aes(x = x, y = y, color = Grupo)) +
  geom_point(size = 3) +
  scale_color_viridis_d() +
  labs(x = "X", y = "y", color = "Grupo") +
  theme_minimal(base_size = 12) +
  theme(
    legend.position = "top",
    panel.grid.minor = element_blank(),
    panel.grid.major = element_line(color = "gray90"),
    axis.line = element_line(color = "black"),
    axis.ticks = element_line(color = "black"),
    panel.border = element_blank()
  )
```
:::
:::::

#### Defini√ß√£o de Estratifica√ß√£o

> "*Processo de **dividir dados em subgrupos (estratos)** com base em caracter√≠sticas relevantes como turno, m√°quina, operador, etc.*"

-   **Exemplo:** Existe difer√™n√ßa de desempenho entre os turnos?

#### Tipos de Estratifica√ß√£o

-   Por **tempo:** turno, dia da semana, m√™s;
-   Por **local:** m√°quina, setor, linha de produ√ß√£o;
-   Por **pessoas:** operador, equipe;
-   Por **m√©todo** ou **material**.

```{r}
#| label: tbl-ExamplesStrats
#| tbl-cap: "Exemplos de Tipos de Estratifica√ß√£o."

df <- data.frame(
    Tipo = c("Tempo", "Local", "Pessoa", "M√©todo"),
    Exemplo = c("Turno", "M√°quina", "Operador", "Mat√©ria-prima")
)

knitr::kable(
    df,
    escape = FALSE,
    align = "c",
    booktabs = TRUE
)
```

::::: columns
::: {.column width="50%"}
```{python}
#| label: fig-ExampleStrat2Py
#| fig-cap: "Exemplo 2 de Simula√ß√£o de Dados Estratificados em Python."
#| fig-cap-location: bottom
#| fig-width: 6
#| fig-height: 4

# Exemplo de Estratifica√ß√£o: Defeitos por Turno
np.random.seed(11111)
n = 150
turno = np.random.choice(["Manh√£", "Tarde", "Noite"], size=n)
defeitos = np.random.binomial(n=10, p=1/3, size=n)

# Formato Data Frame
df = pd.DataFrame({"Turno": turno, "Defeitos": defeitos})

# Configura√ß√µes de Figura
fig, ax = plt.subplots(figsize=(6, 4), dpi=600)

# Scatterplot
sns.boxplot(x="Turno", y="Defeitos", data=df, hue="Turno", palette="Set2", ax=ax)

# Configura√ß√µes de eixos e t√≠tulos
ax.set_xlabel(ax.get_xlabel(), fontsize=12)
ax.set_ylabel(ax.get_ylabel(), fontsize=12)

# Outras configura√ß√µes
ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

# Exibi√ß√£o do gr√°fico
plt.show()
```
:::

::: {.column width="50%"}
```{r}
#| label: fig-ExampleStrat2R
#| fig-cap: "Exemplo 2 de Simula√ß√£o de Dados Estratificados em R."
#| fig-cap-location: bottom
#| fig-width: 6
#| fig-height: 4

# Gera√ß√£o de dados
set.seed(11111)
n <- 150
Turno <- sample(c("Manh√£", "Tarde", "Noite"), size = n, replace = TRUE)
Defeitos <- rbinom(n, size = 10, prob = 1/3)

# Data frame
df <- data.frame(Turno = Turno, Defeitos = Defeitos)

# Gr√°fico boxplot
ggplot(df, aes(x = Turno, y = Defeitos, fill = Turno)) +
  geom_boxplot() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "Turno", y = "Defeitos") +
  theme_minimal(base_size = 12) +
  theme(
    legend.position = "none",          # Para imitar o `hue="Turno"` do seaborn
    panel.grid.minor = element_blank(),
    panel.grid.major = element_line(color = "gray90"),
    axis.line = element_line(color = "black"),
    axis.ticks = element_line(color = "black"),
    panel.border = element_blank()
  )
```
:::
:::::

### Folhas de Verifica√ß√£o

S√£o formul√°rios usados para **coletar e organizar dados** de forma sistem√°tica.

-   Facilitam a visualiza√ß√£o e interpreta√ß√£o de dados.
-   Podem ser adaptados para diversos prop√≥sitos.

#### Defini√ß√£o de Folha de Verifica√ß√£o

> ""*Documento estruturado para registrar dados observacionais em tempo real.*

Usada para:

-   Contagem de defeitos
-   Localiza√ß√£o de falhas
-   Frequ√™ncia de ocorr√™ncias

ü§î Verifica√ß√£o: Distribui√ß√£o do Processo de Produ√ß√£o\
ü§î Verifica√ß√£o: Item Defeituoso\
ü§î Verifica√ß√£o: Localiza√ß√£o de Defeitos\
ü§î Verifica√ß√£o: Causas de um defeito ou falha\
ü§î Verifica√ß√£o: Satisfa√ß√£o do Cliente (ex.: question√°rios de satisfa√ß√£o)

![**Exemplo de folha de verifica√ß√£o de defeitos na lataria de um carro.**](images/FOLHA_VERIF.png){fig-align="center"}

::::: columns

::: {.column width="50%"}
```{python}
#| label: fig-ExampleVerifPy
#| fig-cap: "Exemplo Gr√°fico da Folha de Verifica√ß√£o em Python."
#| fig-cap-location: bottom
#| fig-width: 6
#| fig-height: 4

# Dados da Folha de Verifica√ß√£o
defect_types = ["Amassado", "Arranh√£o", "Bolha", "Mancha"]
defect_counts = [3, 7, 6, 9]

# Configura√ß√µes de Figura
fig, ax = plt.subplots(figsize=(6, 4), dpi=600)

# Gr√°fico de Barras
sns.barplot(x=defect_types, y=defect_counts, ax=ax)

# Configura√ß√µes de eixos e t√≠tulos
ax.set_xlabel("Defeito", fontsize=12)
ax.set_ylabel("Quantidade", fontsize=12)

# Outras configura√ß√µes
ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

# Exibi√ß√£o do gr√°fico
plt.show()
```

:::

::: {.column width="50%"}

```{r}
#| label: fig-ExampleVerifR
#| fig-cap: "Exemplo Gr√°fico da Folha de Verifica√ß√£o em R."
#| fig-cap-location: bottom
#| fig-width: 6
#| fig-height: 4

# Dados da Folha de Verifica√ß√£o
tipos <- c("Amassado", "Arranh√£o", "Bolha", "Mancha")
quantidades <- c(3, 7, 6, 9)

# Gr√°fico de Barras
ggplot(data = NULL, aes(x = tipos, y = quantidades)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(x = "Defeito", y = "Quantidade") +
  theme_classic(base_size = 12)
```

:::
:::::

#### Conclus√£o sobre Folhas de Verifica√ß√£o

‚úÖ Facilitam a **padroniza√ß√£o da coleta de dados** \
‚úÖ Auxiliam na **identifica√ß√£o de padr√µes** \
‚úÖ S√£o a **base para an√°lises gr√°ficas e estat√≠sticas posteriores** 

### Diagrama de Ishikawa

> Tamb√©m conhecido como diagrama de causa e efeito ou espinha de peixe.

- Ferramenta para an√°lise de problemas.
- Organiza causas potenciais de um efeito espec√≠fico.

#### Como construir um Diagrama de Ishikawa

1. Defina claramente o problema (efeito).
2. Trace uma linha horizontal com o problema no final (efeito).
3. Adicione as categorias principais de causa (m√©todo, m√°quina, m√£o de obra, material, meio ambiente, medi√ß√£o, etc.)
4. Liste causas espec√≠ficas em cada categoria.

![**Exemplo de diagrama de causa e efeito (Ishikawa).**](images/DIAGRAM_ISHIKAWA.png){fig-align="center"}

:::: progress
:::: {.progress-bar style="width: 100%;"}
::::
::::